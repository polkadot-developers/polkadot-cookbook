name: Test Polkadot Cookbook SDK

on:
  push:
    branches:
      - master
    paths:
      - 'polkadot-cookbook-core/**'
      - 'polkadot-cookbook-cli/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/test-sdk.yml'
  pull_request:
    paths:
      - 'polkadot-cookbook-core/**'
      - 'polkadot-cookbook-cli/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/test-sdk.yml'

env:
  RUST_VERSION: 1.86

jobs:
  test-core:
    name: Test Core Library
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --check --package polkadot-cookbook-core

      - name: Run clippy
        run: cargo clippy --package polkadot-cookbook-core -- -D warnings

      - name: Build core library
        run: cargo build --package polkadot-cookbook-core --verbose

      - name: Run unit tests
        run: cargo test --package polkadot-cookbook-core --lib --verbose

      - name: Run integration tests
        run: cargo test --package polkadot-cookbook-core --test integration_test --verbose

      - name: Run doc tests
        run: cargo test --package polkadot-cookbook-core --doc --verbose

  test-cli:
    name: Test CLI
    runs-on: ubuntu-latest
    needs: test-core
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build CLI
        run: cargo build --package polkadot-cookbook-cli --verbose

      - name: Test CLI - Valid slug
        run: |
          cargo run --package polkadot-cookbook-cli -- test-ci-valid --skip-install --no-git
          if [ ! -f "tutorials/test-ci-valid/README.md" ]; then
            echo "Error: Project was not created"
            exit 1
          fi
          rm -rf tutorials/test-ci-valid

      - name: Test CLI - Invalid slug
        run: |
          ! cargo run --package polkadot-cookbook-cli -- Invalid-Slug 2>&1 | grep "Invalid tutorial slug"

      - name: Test CLI - Help
        run: cargo run --package polkadot-cookbook-cli -- --help

  build-workspace:
    name: Build Workspace
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build workspace
        run: cargo build --workspace --verbose

      - name: Check workspace
        run: cargo check --workspace --verbose
